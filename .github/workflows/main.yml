name: deploy-images-to-gh-registry
run-name: EC2 Deployment

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/main.yml'
      - 'Dockerfile'
      - '**.vue'
      - '**.ts'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.actor }}/${{ github.repository }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            docker stop $(docker ps -a -q --filter ancestor=${{ env.IMAGE_NAME }}) || true
            docker rm $(docker ps -a -q --filter ancestor=${{ env.IMAGE_NAME }}) || true
            docker rmi ${{ env.IMAGE_NAME }}:main || true

            docker pull ${{ env.IMAGE_NAME }}:main
            docker run -d --name fx-ci ${{ env.IMAGE_NAME }}:main
